.. include:: ../../wsref.txt

.. _js_javascript_assembly_data_api:

JavaScript Assembly Data API
============================
The Assembly API can be used as a client of the Assembly Data API service.

Creating an Assembly object
-------------------
To create a new object, instantiate :js:class:`Assembly`
using a configuration object as the input argument.

.. code-block:: javascript

    // access reference data (no token required)
    var api_obj = Assembly({
        ref: '1013/92/2',
        url: 'http://narrative.kbase.us',
        token: '',
        timeout: 6000
    });

To use the object, call the Promise-wrapped functions
and process the results accordingly.

.. code-block:: javascript

    // call function using Promise interface
    api_obj.get_assembly_id().then(
        function(assembly_id) {
            do_something_with(assembly_id);
    });

API Reference
-------------
.. js:class:: Assembly(config)


    :param object config: Configuration object. This object has the following fields:
    * ref - The object reference for the object to be accessed in the format expected by the workspace: |wsref|.
    * url - The url for the GenomeAnnotation Service endpoint.
    * token - The KBase authorization token to be used to access the service.
:throws ArgumentError: Bad input argument

.. js:function:: get_assembly_id()

    Retrieve Assembly ID. 

    :throws ServiceException: Internal service error
    :throws AuthorizationException: Failed to authorize user for operation
    :throws AuthenticationException: Could not authenticate user
    :throws ObjectReferenceException: Error retrieving object for reference
    :throws AttributeException: Error retrieving requested attribute
    :throws TypeException: Input is of wrong type
    :returns: ``string``

.. js:function:: get_genome_annotations()

    Retrieve associated GenomeAnnotation objects.  

    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``list<`` :js:data:`ObjectReference` ``>`` List of GenomeAnnotation object references

.. js:function:: get_external_source_info()

    Retrieve the external source information for this Assembly. 

    :throws ...: same as :js:func:`get_assembly_id`
    :returns:  :js:data:`AssemblyExternalSourceInfo`  Metadata about the external source

.. js:function:: get_stats()

    Retrieve the derived statistical information about this Assembly.  

    :throws ...: same as :js:func:`get_assembly_id`
    :returns:  :js:data:`AssemblyStats` 

.. js:function:: get_number_contigs()

    Retrieve the number of contigs for this Assembly. 

    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``i64`` Total number of contiguous sequences.

.. js:function:: get_gc_content()

    Retrieve the total GC content for this Assembly. 

    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``double`` Proportion of GC content, between 0 and 1.

.. js:function:: get_dna_size()

    Retrieve the total DNA size for this Assembly. 

    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``i64`` Total DNA size

.. js:function:: get_contig_ids()

    Retrieve the contig identifiers for this Assembly. 

    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``list<string>`` List of contig IDs.

.. js:function:: get_contig_lengths(contig_id_list)

    Retrieve the lengths of the contigs in this Assembly. 

    :param list<string> contig_id_list: 
    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``map<string,i64>`` Mapping of contig ID to contig length.

.. js:function:: get_contig_gc_content(contig_id_list)

    Retrieve the gc content for contigs in this Assembly. 

    :param list<string> contig_id_list: 
    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``map<string,double>`` Mapping of contig IDs to GC content proportion.

.. js:function:: get_contigs(contig_id_list)

    Retrieve all the data for the contigs in this Assembly. 

    :param list<string> contig_id_list: 
    :throws ...: same as :js:func:`get_assembly_id`
    :returns: ``map<string,`` :js:data:`AssemblyContig` ``>`` Mapping of contig ID to details for that contig.

----

.. js:data:: ObjectReference


    ``string``

.. js:data:: ServiceException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  
- **inputs** (map<string,string>) *optional*: Optional mapping
  

.. js:data:: AuthorizationException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  

.. js:data:: AuthenticationException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  

.. js:data:: ObjectReferenceException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  

.. js:data:: AttributeException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  

.. js:data:: TypeException

- **message** (string) *required*: Readable message desribing the error condition.
  
- **stacktrace** (string) *optional*: Program stack trace
  
- **valid_types** (list<string>) *optional*: List of types that would have been acceptable.
  

.. js:data:: AssemblyStats

Derived statistical information about an assembly.

- **num_contigs** (i64) *optional*: Total number of contiguous sequences.
  
- **dna_size** (i64) *optional*: Total length of all dna sequences.
  
- **gc_content** (double) *optional*: Proportion of guanine (G) and cytosine (C) content.
  

.. js:data:: AssemblyExternalSourceInfo

Metadata about the external source of this Assembly.

- **external_source** (string) *optional*: Name of the external source
  
- **external_source_id** (string) *optional*: Identifier of external source
  
- **external_source_origination_date** (string) *optional*: Origination date of external source
  

.. js:data:: AssemblyContig

- **contig_id** (string) *optional*: Contig ID
  
- **sequence** (string) *optional*: Actual contents of the sequence for this contig
  
- **length** (i64) *optional*: Length of the contig
  
- **gc_content** (double) *optional*: GC proportion for the contig
  
- **md5** (string) *optional*: Hex-digest of MD5 hash of the contig's contents
  
- **name** (string) *optional*: Name of the contig
  
- **description** (string) *optional*: Description of the contig
  
- **is_complete** (bool) *optional*: True if this contig is complete, False otherwise
  
- **is_circular** (bool) *optional*: True if this contig is circular, False otherwise
  